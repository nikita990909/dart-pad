void main() {
  var enter = '\n';
  var access = {
    0: 'Заблокированный пользователь',
    1: 'Пользователь',
    2: 'Модератор',
    3: 'Администратор',
    4: 'Главный администратор',
    5: 'Специальный администратор',
    6: 'Куратор проекта',
    7: 'Директор'
  };
  var possibility = {
    0: '* Все доступы заблокированны$enter* Обратитесь к Администратору',
    1: '- Просмотр товаров$enter- Покупка товаров$enter- Редактирование собственной корзины',
    2: '- Редактирование товаров$enter- Редактирование продавцов',
    3: '- Редактирование товаров пользователя$enter- Редактирование профилей пользователя$enter- Блокировка/Разблокировка пользователей',
    4: '- Добавление/удаление модераторов проекта$enter- Редактирование групп товаров',
    5: '- Добавление/удаление администраторов проекта$enter- Доступ в технический отдел проекта',
    6: '- Добавление/удаление промоакций проекта$enter- Возможность изменения ценовой политики (логистика, товары, скидки)',
    7: '- Добавление/удаление специальной администрации проекта$enter- Добавление/удаление кураторов проекта'
  };
  var users = {
    'Попов Никита Станиславович': 7,
    'Попов Денис Станиславович': 3,
    'Попов Михаил Станиславович': 2,
    'Хуссейн Дэн Арифович': 0
  };
  var user = 'Хуссейн Дэн Арифович';
  var position = access[users[user]];
  print('Пользователь:    $user$enterУровень доступа: $position');
  switch (users[user]) {
    case 1:
      print(possibility[1]);
      break;
    case 2:
      for (var i = 1; i <= 2; i++) {
        print(possibility[i]);
      }
      break;
    case 3:
      for (var i = 1; i <= 3; i++) {
        print(possibility[i]);
      }
      break;
    case 4:
      for (var i = 1; i <= 4; i++) {
        print(possibility[i]);
      }
      break;
    case 5:
      for (var i = 1; i <= 5; i++) {
        print(possibility[i]);
      }
      break;
    case 6:
      for (var i = 1; i <= 6; i++) {
        print(possibility[i]);
      }
      break;
    case 7:
      for (var i = 1; i <= 7; i++) {
        print(possibility[i]);
      }
      break;
    default:
      print(possibility[0]);
      break;
  }
}
